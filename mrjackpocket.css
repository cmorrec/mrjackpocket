/**
 *------
 * BGA framework: © Gregory Isabelli <gisabelli@boardgamearena.com> & Emmanuel Colin <ecolin@boardgamearena.com>
 * MrJackPocket implementation : © <Your name here> <Your email address here>
 *
 * This code has been produced on the BGA studio platform for use on http://boardgamearena.com.
 * See http://en.boardgamearena.com/#!doc/Studio for more information.
 * -----
 *
 * mrjackpocket.css
 *
 * MrJackPocket stylesheet
 *
 */

/*
    This is the CSS stylesheet of your game User Interface.
    
    Styles defined on this file will be applied to the HTML elements you define in your
    HTML template (mrjackpocket_mrjackpocket.tpl), and to HTML elements you create dynamically
    (in mrjackpocket.js).
    
    Usually, you are using CSS to:
    
    1°) define the overall layout of your game
        (ex: place the board on the top left, place player's hand beside, place the deck on the right, ...).

    2°) create your CSS-sprites:
        All images of your games should be gathered into a small number of image files. Then, using
        background-image and background-position CSS properties, you create HTML blocks that can 
        display these images correctly (see example below).
    
    3°) ... anything else:
        It is really easy to add and remove CSS classes dynamically from your Javascript with
        dojo.addClass and dojo.removeClass. It is also easy to check if an element has a class
        (dojo.hasClass) or to get all elements with a specific class (dojo.query). This is why,
        very often, using CSS classes for the logic of your user interface allow you to do complex
        thing easily.
        
        
     Note: on the production platform, this file will be compressed and comments will be removed.
           Consequently, don't hesitate to put as many comments as necessary.
*/


/* Note: you must not use any @import directive */


/********* You can start writing your CSS below this line: **********/


/*
    Example of CSS sprites (a black token and a white token, 20x20px each, embedded in the same "tokens.png" 40x20px image):

    .white_token {
        background-image: url('img/tokens.png');
        background-position: 0px 0px;
    }
    .black_token {
        background-image: url('img/tokens.png');
        background-position: -20px 0px;
    }
    .token {
        width: 20px;
        height: 20px;
        background-repeat: none;
    }
*/

#container {
    display: grid;
    grid-template-columns: auto;
    grid-template-rows: auto;
    grid-template-areas: 
        "options round round round round round goal"
        "options board board board board board goal"
        "options board board board board board alibi"
        "options board board board board board alibi"
        "options board board board board board dAlibi"
        "options board board board board board dAlibi";
}

#available-options {
    grid-area: options;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 10px;
}

.available-option {
    width: 80px;
    height: 80px;
}

.next-option {
    width: 20px;
    height: 20px;
    margin-right: -40px;
    margin-top: -20px;
}

#round-info {
    grid-area: round;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    gap: 10px;
}

.round {
    width: 40px;
    height: 40px;
    z-index: 1;
    transition-duration: 900ms, 900ms;
    transition-property: box-shadow, transform;
}

#goal-info {
    grid-area: goal;
}

#board {
    grid-area: board;
    display: grid;
    gap: 10px;
    grid-template-columns: 1fr 1fr 1fr 1fr 1fr;
    grid-template-rows: 1fr 1fr 1fr 1fr 1fr;
    justify-items: center;
    align-items: center;
}

#alibi-deck {
    grid-area: alibi;
}

.tale {
    border: 1px solid black;
    text-align: center;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    height: 100px;
    width: 100px;
    flex-wrap: wrap;
    perspective: 600px;
}

.tale-outer {
    align-items: center;
    justify-content: center;
    position: relative;
    height: 100px;
    width: 100px;
}

.tale-inner {
    height: 50px;
    width: 50px;
}

.option-was-used {
    -webkit-filter: grayscale(100%);
    filter: grayscale(100%);
}

.option-is-ready {
    cursor: pointer;
    box-shadow: 3px 3px red, -1em 0 .4em olive;
}

.next-option-disable {
    visibility: hidden;
}

.tale-to-choose {
    box-shadow: 3px 3px red, -1em 0 .4em olive;
    cursor: pointer;
}

.current-round {
    box-shadow: 3px 3px red, -1em 0 .4em olive;
}

.character-field {

}

.detective-field {
    border: 0px;
    background: wheat;
}

.is-visible-tale {
    box-shadow: 3px 3px red, -1em 0 .4em olive;
}

#clockwise {
    position: absolute;
    right: -50px;
    top: 10px;
    cursor: pointer;
    z-index: 1;
}

#counter-clockwise {
    position: absolute;
    left: -60px;
    top: 10px;
    cursor: pointer;
    z-index: 1;
}

#rotate-approve {
    position: absolute;
    bottom: -20px;
    left: auto;
    right: auto;
    cursor: pointer;
    z-index: 1;
}

.rotate-approve-disable {
    color: gray;
    cursor: default;
}

#detective-alibi {
    grid-area: dAlibi;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 10px;
}

#jack-panel {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
}

#detective-panel {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
}

#jack-character {
    width: 30px;
    height: 45px;
}

#jack-character-tooltip {
    width: 100px;
    height: 150px;
}

.player-alibi {
    width: 100px;
    height: 150px;
}

.time-container {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    
}

.time-num {

}

.time-label {
    width: 50px;
    height: 50px;
}

.winned-rounds-tooltip-container {
    min-width: 50px;
    min-height: 50px;
    max-width: 220px;
    max-height: 220px;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
}

.winned-round-tooltip {
    width: 50px;
    height: 50px;
}

.alibi-cards-tooltip-container {
    min-width: 100px;
    min-height: 100px;
    max-width: 220px;
    max-height: 320px;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
}

.alibi-card-tooltip {
    width: 100px;
    height: 150px;
}

#jack-points-plus {
    
}

/* The flip card container - set the width and height to whatever you want. We have added the border property to demonstrate that the flip itself goes out of the box on hover (remove perspective if you don't want the 3D effect */
#visible-status-card {
    width: 220px;
    height: 320px;
    transition-duration: 900ms, 900ms;
    transition-property: box-shadow, transform;
    background-color: transparent;
    perspective: 1000px; /* Remove this if you don't want the 3D effect */
}

/* This container is needed to position the front and back side */
#visible-status-card-inner {
    position: relative;
    width: 220px;
    height: 320px;
    z-index: 2;
    text-align: center;
    transition: transform 0.8s;
    transform-style: preserve-3d;
}
  
  /* Do an horizontal flip when you move the mouse over the flip box container */
#visible-status-card-inner.is-visible {
    transform: rotateY(180deg);
}

/* Position the front and back side */
#visible-status-card-front, #visible-status-card-back {
    position: absolute;
    width: 220px;
    height: 320px;
    -webkit-backface-visibility: hidden; /* Safari */
    backface-visibility: hidden;
}

/* Style the front side (fallback if image is missing) */
#visible-status-card-front {

}

/* Style the back side */
#visible-status-card-back {
    transform: rotateY(180deg);
}
